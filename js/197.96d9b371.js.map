{"version":3,"file":"js/197.96d9b371.js","mappings":"kHAAA,2/D","sources":["webpack://vueweb/./src/posts/jsPrerequisites/jsPrerequisites.md"],"sourcesContent":["export default \"# js先决条件\\r\\n\\r\\n#### 前言\\r\\n\\r\\n这里是记录和总结three.js提供的[引导教程](https://threejs.org/manual/#eh/prerequisites)，真的比较良心，可以规范编码，生怕你不会一些js的机制而不会使用three.js😂\\r\\n\\r\\n### 1. HTML使用\\r\\n\\r\\n```html\\r\\n<html>\\r\\n  <head>\\r\\n    ...\\r\\n  </head>\\r\\n  <body>\\r\\n     ...\\r\\n  </body>\\r\\n  <script>\\r\\n    // inline javascript\\r\\n  </script>\\r\\n</html>\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n### 2. `document.querySelector `和` document.querySelecorAll`\\r\\n\\r\\n这两个让你用js选择与css匹配的元素。\\r\\n\\r\\n\\r\\n\\r\\n### 4. 闭包工作\\r\\n\\r\\n这里会a是一个创建函数的函数。\\r\\n\\r\\n```js\\r\\nfunction a(v) {\\r\\n  const foo = v;\\r\\n  return function() {\\r\\n     return foo;\\r\\n  };\\r\\n}\\r\\n \\r\\nconst f = a(123);\\r\\nconst g = a(456);\\r\\nconsole.log(f());  // prints 123\\r\\nconsole.log(g());  // prints 456\\r\\n```\\r\\n\\r\\n### 5.this的使用\\r\\n\\r\\n注意this被设为的对象，函数被`.`调用是this是调用的对象，否则是`null`\\r\\n\\r\\n```js\\r\\n const callback = someobject.somefunction;\\r\\n loader.load(callback); //这里this就会是null\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n### 6.ES5/ES6/ES7 特性\\r\\n\\r\\n`var`被弃用，使用`const`和`let`\\r\\n\\r\\n使用`for(elem of collection)`替代`for(elem in collection)`\\r\\n\\r\\n```js\\r\\nfor (const [key, value] of Object.entries(someObject)) {\\r\\n  console.log(key, value);\\r\\n}\\r\\n```\\r\\n\\r\\n使用`forEash`,`map`和`filter`\\r\\n\\r\\n使用解构赋值\\r\\n\\r\\n```js\\r\\nconst dim = {width: 300, height: 150}; \\r\\nconst {width, height} = dims; \\r\\n```\\r\\n\\r\\n简写对象声明\\r\\n\\r\\n```js\\r\\n const width = 300;\\r\\n const height = 150;\\r\\n const obj = {\\r\\n   width,\\r\\n   height,\\r\\n   area() {\\r\\n     return this.width * this.height;\\r\\n   },\\r\\n };\\r\\n```\\r\\n\\r\\n使用扩展运算符`...`\\r\\n\\r\\n```js\\r\\nfunction log(className, ...args) {\\r\\n    const elem = document.createElement('div');\\r\\n    elem.className = className;\\r\\n    elem.textContent = [...args].join(' ');\\r\\n    document.body.appendChild(elem);\\r\\n}\\r\\n\\r\\nconst position = [1, 2, 3];\\r\\nsomemesh.position.set(...position);\\r\\n\\r\\n```\\r\\n\\r\\n使用`class`来生成类\\r\\n\\r\\n使用箭头函数`(var) => { } `，且this会自动绑定到调用对象上\\r\\n\\r\\nPromises改善异步代码\\r\\n\\r\\n使用反引号的字符模板\\r\\n\\r\\n### 最后\\r\\n\\r\\n命名规则： \\r\\n\\r\\n- **小驼峰**：变量，函数，方法\\r\\n- **大驼峰**：构造函数，类\\r\\n\\r\\n\\r\\n\\r\\n\";"],"names":[],"sourceRoot":""}